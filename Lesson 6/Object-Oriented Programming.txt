- What is Object-Oriented Programming?
    - Object-Oriented Programming (OOP) is a programming paradigm that revolves around the concept of "objects."
    - The main goal of OOP is to organize and structure code in a way that mirrors real-world entities and
      relationships, making the code more understandable, modular, and reusable.

- Key Concepts in OOP:
    - Objects: Instances of classes, representing real-world entities.
    - Classes: Blueprint or template that defines the structure and behavior of objects.
    - Methods/Functions: Functions defined within a class to perform operations on the object's data.
    - Constructor: A special method called when an object of a class is created. It initializes the object's state.
    - Inheritance: The mechanism by which one class can inherit properties and methods from another class.
    - Encapsulation: The concept of bundling data and methods within a class and controlling access to that data
        through public and private access modifiers.
    - Polymorphism: The ability to present the same interface for different data types or classes.
    - Abstraction:  the concept of hiding complex reality while exposing only the essential parts. Simplifies complex
        systems by breaking them into smaller, more manageable parts


    What are the fundamental principles of OOP?
     encapsulation, polymorphism, inheritance & abstraction

 Some OOP languages include python, java, javascript, php, typescript and much more